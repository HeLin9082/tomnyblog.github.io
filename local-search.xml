<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我的第一篇博客文章</title>
    <link href="/tomnyblog.github.io/2024/06/24/hello-world/"/>
    <url>/tomnyblog.github.io/2024/06/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>欢迎来到我的Hexo博客。为纪念博客的搭建到上线成功，第一篇博客为记录搭建到上线的过程：</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check #<a href="https://hexo.io/docs/">documentation</a> for more info.<br> If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><!-- ## Quick Start（注释方式与HTML一样） --><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><h4 id="以Windows系统搭建为例，前提条件：nodejs、git安装完成。可参考hexo官方文档"><a href="#以Windows系统搭建为例，前提条件：nodejs、git安装完成。可参考hexo官方文档" class="headerlink" title="以Windows系统搭建为例，前提条件：nodejs、git安装完成。可参考hexo官方文档"></a>以Windows系统搭建为例，前提条件：nodejs、git安装完成。可参考<a href="https://hexo.io/zh-cn/docs/">hexo</a>官方文档</h4><h3 id="1、Nodejs、Git本地部署已完成-可正常显示版本号"><a href="#1、Nodejs、Git本地部署已完成-可正常显示版本号" class="headerlink" title="1、Nodejs、Git本地部署已完成(可正常显示版本号)"></a>1、Nodejs、Git本地部署已完成(可正常显示版本号)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm -v    <span class="hljs-comment"># 命令生成对应版本号  </span><br><br>$ git -v    <span class="hljs-comment"># 命令生成对应版本号</span><br></code></pre></td></tr></table></figure><h3 id="2、本地下创建一个目录，目录下git-Bash打开初始化项目；"><a href="#2、本地下创建一个目录，目录下git-Bash打开初始化项目；" class="headerlink" title="2、本地下创建一个目录，目录下git Bash打开初始化项目；"></a>2、本地下创建一个目录，目录下git Bash打开初始化项目；</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init   <span class="hljs-comment"># 或 hexo init myblog 初始化到某文件夹，cd myblog 进入文件夹部署 </span><br></code></pre></td></tr></table></figure><h3 id="3、初始后输入命令打开本地服务地址，打开后为默认主题和hello-world页"><a href="#3、初始后输入命令打开本地服务地址，打开后为默认主题和hello-world页" class="headerlink" title="3、初始后输入命令打开本地服务地址，打开后为默认主题和hello world页"></a>3、初始后输入命令打开本地服务地址，打开后为默认主题和hello world页</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server  <span class="hljs-comment"># 或简写 hexo s 生成本地服务地址，一般为 http://localhost:4000/</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="4、将项目部署到github，先将项目生成public静态资源文件夹，再上传到Github-Pages"><a href="#4、将项目部署到github，先将项目生成public静态资源文件夹，再上传到Github-Pages" class="headerlink" title="4、将项目部署到github，先将项目生成public静态资源文件夹，再上传到Github Pages"></a>4、将项目部署到github，先将项目生成public静态资源文件夹，再上传到Github Pages</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate  <span class="hljs-comment"># 或简写 hexo g 生成静态资源</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><!-- ### Deploy to remote sites --><h3 id="5、已注册并登陆github，创建新的仓库。注意点：-1-仓库名必须为your-name-github-io格式且设置为public公开。-2-点击仓库内的“Setting”-“Gages”，设置Branch的分支和目录-新手一般main和-root就行-并save保存。-3-需要使用ssh配置链接并上传的自行百度就可以，配置好config和密钥——需要使用ssh上传仓库时配置，否则可使用https连接：同-1-2-点击仓库内的“Setting”-“Gages”，设置“Build-and-deployment”的“source”为“Github-Actions”配置。同时需要在hexo项目根目录下的文件-config-yml内的deploy配置hexo上传的对应配置。"><a href="#5、已注册并登陆github，创建新的仓库。注意点：-1-仓库名必须为your-name-github-io格式且设置为public公开。-2-点击仓库内的“Setting”-“Gages”，设置Branch的分支和目录-新手一般main和-root就行-并save保存。-3-需要使用ssh配置链接并上传的自行百度就可以，配置好config和密钥——需要使用ssh上传仓库时配置，否则可使用https连接：同-1-2-点击仓库内的“Setting”-“Gages”，设置“Build-and-deployment”的“source”为“Github-Actions”配置。同时需要在hexo项目根目录下的文件-config-yml内的deploy配置hexo上传的对应配置。" class="headerlink" title="5、已注册并登陆github，创建新的仓库。注意点：(1)仓库名必须为your_name.github.io格式且设置为public公开。(2)点击仓库内的“Setting”-“Gages”，设置Branch的分支和目录(新手一般main和&#x2F;root就行)并save保存。(3)需要使用ssh配置链接并上传的自行百度就可以，配置好config和密钥——需要使用ssh上传仓库时配置，否则可使用https连接：同(1),(2)点击仓库内的“Setting”-“Gages”，设置“Build and deployment”的“source”为“Github Actions”配置。同时需要在hexo项目根目录下的文件_config.yml内的deploy配置hexo上传的对应配置。"></a>5、已注册并登陆github，创建新的仓库。注意点：(1)仓库名必须为your_name.github.io格式且设置为public公开。(2)点击仓库内的“Setting”-“Gages”，设置Branch的分支和目录(新手一般main和&#x2F;root就行)并save保存。(3)需要使用ssh配置链接并上传的自行百度就可以，配置好config和密钥——需要使用ssh上传仓库时配置，否则可使用https连接：同(1),(2)点击仓库内的“Setting”-“Gages”，设置“Build and deployment”的“source”为“Github Actions”配置。同时需要在hexo项目根目录下的文件_config.yml内的deploy配置hexo上传的对应配置。</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-comment">// _config.yml 配置</span><br><span class="hljs-symbol">url:</span> https:<span class="hljs-comment">//账号名.github.io/项目名.github.io/   # 配置博客地址</span><br><br>root： /    <span class="hljs-meta"># 一般默认，配置文件内不用配置和修改，主要对应github的分支路径</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> git@your_name:账号名/仓库名.github.io.git   <span class="hljs-meta"># 其中的your_name对于git的配置，一般为github.com</span><br><span class="hljs-symbol">  branch:</span> main<br></code></pre></td></tr></table></figure><h3 id="6、配置好github仓库和-config-yml内容后，在git-bash下载插件，再使用命令上传到github。-注意：如果出现多次端口上传失败，多上传几次。有错误查看对应信息修改相关配置-查看仓库上传成功后点击仓库内的“Setting”-“Gages”，“Visit-site”旁边的链接就是博客的地址。"><a href="#6、配置好github仓库和-config-yml内容后，在git-bash下载插件，再使用命令上传到github。-注意：如果出现多次端口上传失败，多上传几次。有错误查看对应信息修改相关配置-查看仓库上传成功后点击仓库内的“Setting”-“Gages”，“Visit-site”旁边的链接就是博客的地址。" class="headerlink" title="6、配置好github仓库和_config.yml内容后，在git bash下载插件，再使用命令上传到github。(注意：如果出现多次端口上传失败，多上传几次。有错误查看对应信息修改相关配置)查看仓库上传成功后点击仓库内的“Setting”-“Gages”，“Visit site”旁边的链接就是博客的地址。"></a>6、配置好github仓库和_config.yml内容后，在git bash下载插件，再使用命令上传到github。(注意：如果出现多次端口上传失败，多上传几次。有错误查看对应信息修改相关配置)查看仓库上传成功后点击仓库内的“Setting”-“Gages”，“Visit site”旁边的链接就是博客的地址。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm i hexo-deployer-git --save  <span class="hljs-comment"># 上传到仓库必须的插件</span><br><br>$ hexo deploy   <span class="hljs-comment"># 或简写hexo d 上传到github </span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><!-- ### Create a new post --><h3 id="7、博客上传成功后，修改博客内容再重新上传"><a href="#7、博客上传成功后，修改博客内容再重新上传" class="headerlink" title="7、博客上传成功后，修改博客内容再重新上传"></a>7、博客上传成功后，修改博客内容再重新上传</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;welcome&quot;</span>   <span class="hljs-comment"># 会在source的_posts文件夹下创建名为“welcome.md”页</span><br>$ hexo new page <span class="hljs-string">&quot;newwelcome&quot;</span>   <span class="hljs-comment"># 会在source的文件夹下创建名为“newwelcome”文件夹及资源</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="8、修改博客内容后，先使用hexo命令清理缓存或之前的静态资源，再输入命令在本地服务查看或上传github仓库"><a href="#8、修改博客内容后，先使用hexo命令清理缓存或之前的静态资源，再输入命令在本地服务查看或上传github仓库" class="headerlink" title="8、修改博客内容后，先使用hexo命令清理缓存或之前的静态资源，再输入命令在本地服务查看或上传github仓库"></a>8、修改博客内容后，先使用hexo命令清理缓存或之前的静态资源，再输入命令在本地服务查看或上传github仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean   <span class="hljs-comment"># 清除本地缓存或静态资源（会删除项目的public文件夹）</span><br>$ hexo g &amp;&amp; hexo s   <span class="hljs-comment"># 重新生成静态资源后并生成本地服务地址</span><br><br>$ hexo g &amp;&amp; hexo d   <span class="hljs-comment"># 重新生成静态资源后并上传到github仓库</span><br><br><span class="hljs-comment"># 可连接命令使用如：hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></code></pre></td></tr></table></figure><h3 id="9、更换主题。可在hexo-theme官网选择多种免费主题，点击主题内有教程配置。"><a href="#9、更换主题。可在hexo-theme官网选择多种免费主题，点击主题内有教程配置。" class="headerlink" title="9、更换主题。可在hexo-theme官网选择多种免费主题，点击主题内有教程配置。"></a>9、更换主题。可在<a href="https://hexo.io/themes/">hexo-theme</a>官网选择多种免费主题，点击主题内有教程配置。</h3><p>可使用git clone或npm等多种方式下载主题包，这里使用npm下载fluid主题也是本站主题教程为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm i --save hexo-theme-fluid   <span class="hljs-comment"># 下载主题包到本地项目</span><br></code></pre></td></tr></table></figure><p>可按<a href="https://hexo.fluid-dev.com/docs/">fluid主题配置</a>教程配置，注意点：<br><br>(1).主题包复制。本地使用npm下载包后，根目录themes文件夹内是没有包的(查看根目录文件package.json是否存在包)，需要在node_modules模块包管理内查找hexo-theme-fluid主题包并复制到根目录themes文件夹下。<br><br>(2).配置文件设置。将hexo-theme-fluid主题包内的配置文件_config.yml复制，在项目根目录下粘贴并修改为_config.fluid.yml文件名。<br><br>(3).在_config.yml文件修改为 theme：fluid 对应主题，后续博客内容修改配置一般在根目录_config.fluid.yml下。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sas">修改主题配置后试运行和上传:<br>hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo s   # 本地服务查看主题配置后是否生效<br><br>hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo d   # 本地确认主题生效上传到github<br></code></pre></td></tr></table></figure><h3 id="10、统计流量与评论：使用LeanCloud记录单篇文章阅读量和文章评论功能（也是使用不蒜子或百度统计等方式进行网站统计管理）"><a href="#10、统计流量与评论：使用LeanCloud记录单篇文章阅读量和文章评论功能（也是使用不蒜子或百度统计等方式进行网站统计管理）" class="headerlink" title="10、统计流量与评论：使用LeanCloud记录单篇文章阅读量和文章评论功能（也是使用不蒜子或百度统计等方式进行网站统计管理）"></a>10、统计流量与评论：使用LeanCloud记录单篇文章阅读量和文章评论功能（也是使用<a href="https://busuanzi.ibruce.info/">不蒜子</a>或<a href="https://tongji.baidu.com/web5/welcome/login">百度统计</a>等方式进行网站统计管理）</h3><p>打开<a href="https://www.leancloud.cn/">leancloud</a>官网，点击‘免费使用’进入并注册登陆，<br>登陆后个人实名认证和邮箱认证，<br><br>认证完成后点击创建应用，选择‘开发版’即可，免费的<br><br><img src="/tomnyblog.github.io/source/images/lec-app.png" alt="创建应用 Image"> </p><p><br><span style="font-size:8px">markdown图片加载有<a href="https://hexo.io/zh-cn/docs/asset-folders.html">官方教程</a></span></p><p><br>进入应用，点击 设置-&gt;应用凭证，找到 AppID、AppKey和REST API 服务器地址并记录，后面配置需要用<br><br><img src="/tomnyblog.github.io/source/images/lec-appkey.png" alt="生成应用凭证 Image"> </p><p><br>再打开项目根目录下_config.fluid.yml主题配置文件，文章和网页尾部流量统计的量和人数配置<br><br><img src="/tomnyblog.github.io/source/images/lec-enable.png" alt="配置流量统计开关 Image"><br><br><img src="/tomnyblog.github.io/source/images/lec-IDkeyURL.png" alt="配置IDkeyUrl Image"><br><br><img src="/tomnyblog.github.io/source/images/lec-headViews.png" alt="配置文章头部流量统计 Image"><br><br><img src="/tomnyblog.github.io/source/images/lec-footerPVUV.png" alt="配置文章网页尾部统计 Image"> </p><p><br>配置成功后打开会显示文章头部和网页尾部统计样式<br><br><img src="/tomnyblog.github.io/source/images/lec-headImg.png" alt="文章头部统计样式 Image"><br><br><img src="/tomnyblog.github.io/source/images/lec-footerImg.png" alt="网页尾部统计样式 Image"> </p><p><br>至此，基本配置完成！文章按<a href="https://hexo.io/zh-cn/docs/writing">官方文档</a>配置和教程书写，也可按<a href="https://hexo.fluid-dev.com/docs/guide/#%E9%A6%96%E9%A1%B5">主题配置指南</a>教程书写。</p><!-- <br><span style="font-size:8px">图片资源转载于[CSDN博主](https://blog.csdn.net/m0_61068009/article/details/138027129)</span> --><h5 id="注：本博客为学习交流使用，不应用商业。如有资源侵权请联系博主-wyyx9082hgl-163-com删改资源，谢谢支持！"><a href="#注：本博客为学习交流使用，不应用商业。如有资源侵权请联系博主-wyyx9082hgl-163-com删改资源，谢谢支持！" class="headerlink" title="注：本博客为学习交流使用，不应用商业。如有资源侵权请联系博主:wyyx9082hgl@163.com删改资源，谢谢支持！"></a>注：本博客为学习交流使用，不应用商业。如有资源侵权请<span style="font-size:11px"><a href="https://email.163.com/">联系博主:wyyx9082hgl@163.com</a></span>删改资源，谢谢支持！</h5>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
